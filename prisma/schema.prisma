// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
    output   = "../generated/prisma"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  fullName  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([username])
  @@index([email])
}

model Storage {
  id        String   @id @default(uuid())
  url       String
  filename  String
  size      Int
  mimetype  String
  timestamp DateTime @default(now())
  
  jobs      Job[]
}

enum JobStatus {
  pending
  processing
  completed
  failed
}

model Job {
  id          String    @id @default(uuid())
  status      JobStatus @default(pending)
  fileId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  startedAt   DateTime?
  completedAt DateTime?
  error       String?
  
  storage     Storage   @relation(fields: [fileId], references: [id])
  results     AnalysisResult[]
}

model AnalysisResult {
  id          String   @id @default(uuid())
  jobId       String
  transcript  String
  sentiment   String
  metadata    Json?
  createdAt   DateTime @default(now())
  
  job         Job      @relation(fields: [jobId], references: [id])
} 